@page "/Login"
@using SB.BlazorServer.Data.Auth
@layout EmptyLayout
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SB.BlazorServer.Data.Models
@inject ProtectedLocalStorage BrowserStorage
@inject ProtectedSessionStorage SessionStorage

<PageTitle>SupportBuddy - Log In</PageTitle>

<style>
  html,
  body,
  .page {
    height: 100%;
    width: 100%;
  }
  
  body, .page {
    display: flex;
    align-items: center;
    padding-top: 40px;
    padding-bottom: 40px;
    background-color: #f5f5f5;
  }
  
  .form-signin {
    width: 100%;
    max-width: 330px;
    padding: 15px;
    margin: auto;
    text-align: center;
  }
  
  .form-signin .checkbox {
    font-weight: 400;
  }
  
  .form-signin .form-floating:focus-within {
    z-index: 2;
  }
  
  .form-signin input[type="email"] {
    margin-bottom: -1px;
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
  
  .form-signin input[type="password"] {
    margin-bottom: 10px;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
</style>

<main class="form-signin">
  <h1 class="h2">SupportBuddy</h1>
    <h1 class="h3 mb-3 fw-normal">Please sign in</h1>

    <div class="form-floating">
      <input @bind="Username" type="text" class="form-control" id="floatingInput" placeholder="Username">
      <label for="floatingInput">Username</label>
    </div>
    <div class="form-floating">
      <input @bind="Password" type="password" class="form-control" id="floatingPassword" placeholder="Password">
      <label for="floatingPassword">Password</label>
    </div>

    <div class="checkbox mb-3">
      <label>
        <input @bind="Remember" type="checkbox" value="remember-me"> Remember me
      </label>
    </div>
  <button @onclick="@(async () => await DoLogin())" class="w-100 btn btn-lg btn-primary mb-5" type="submit">Sign in</button>
  
  <div class="row mt-3 @HideError">
      <div class="col">
        <div class="alert alert-danger" role="alert">
          Incorrect username and/or password!
        </div>
      </div>
    </div>
  <p class="mt-5 mb-3 text-muted">&copy; 2017–2021</p>
</main>

@code {
  private string? Username;
  private string? Password;
  private bool Remember;

  private bool ErrorState = false;
  private string HideError => ErrorState ? "" : "d-none";

  private async Task DoLogin()
  {
    ErrorState = false;
    if (
      !string.IsNullOrWhiteSpace(Username) &&
      !string.IsNullOrWhiteSpace(Password)
      )
    {
      var newLogin = new LoginModel
      {
        Username = Username,
        Password = Password
      };

      var response = await AuthService.PostAuthenticate(newLogin);
      if (response != null && response.BasicAuthString.Length > 0)
      {
        //Login succesfull

        if (Remember)
          await BrowserStorage.SetAsync("authstring", response.BasicAuthString);
        else
          await SessionStorage.SetAsync("authstring", response.BasicAuthString);
        
        NavigationManager.NavigateTo("/");
      }
      else
      {
        ErrorState = true;
      }
    }
  }
}